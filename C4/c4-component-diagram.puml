@startuml C4_Component
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

title Diagramme de Composants - API Application (Express.js)

Container(webapp, "Web Application", "React.js", "Interface utilisateur")

Container_Boundary(api, "API Application") {
    Component(router, "API Router", "Express Router", "Routage des requêtes HTTP")
    Component(wsHandler, "WebSocket Handler", "Socket.io", "Gestion des connexions temps réel")
    Component(authMiddleware, "Auth Middleware", "Express Middleware", "Authentification et autorisation")
    
    Component(sessionController, "Session Controller", "Express Controller", "Gestion des sessions BDD")
    Component(botController, "Bot Controller", "Express Controller", "Interface avec le bot LLM")
    Component(scenarioController, "Scenario Controller", "Express Controller", "Gestion des scénarios Gherkin")
    
    Component(sessionService, "Session Service", "Business Logic", "Logique métier des sessions")
    Component(botEngine, "Bot Engine", "Business Logic", "Intelligence du bot testeur")
    Component(openaiService, "OpenAI Service", "Integration", "Interface avec l'API OpenAI")
    Component(scenarioService, "Scenario Service", "Business Logic", "Gestion des scénarios")
    
    Component(sessionRepo, "Session Repository", "Data Access", "Accès aux données des sessions")
    Component(scenarioRepo, "Scenario Repository", "Data Access", "Accès aux données des scénarios")
    Component(configRepo, "Config Repository", "Data Access", "Accès aux configurations")
}

ContainerDb(database, "Base de données", "PostgreSQL", "Stockage persistant")
System_Ext(openai, "OpenAI API", "Service LLM")

Rel(webapp, router, "Appelle", "JSON/HTTPS")
Rel(webapp, wsHandler, "Connecte", "WebSocket")

Rel(router, authMiddleware, "Utilise")
Rel(router, sessionController, "Route vers")
Rel(router, botController, "Route vers")
Rel(router, scenarioController, "Route vers")

Rel(wsHandler, sessionService, "Utilise")
Rel(wsHandler, botEngine, "Utilise")

Rel(sessionController, sessionService, "Utilise")
Rel(botController, botEngine, "Utilise")
Rel(scenarioController, scenarioService, "Utilise")

Rel(sessionService, sessionRepo, "Utilise")
Rel(scenarioService, scenarioRepo, "Utilise")
Rel(botEngine, openaiService, "Utilise")
Rel(botEngine, configRepo, "Utilise")

Rel(sessionRepo, database, "Lit/Écrit", "SQL")
Rel(scenarioRepo, database, "Lit/Écrit", "SQL")
Rel(configRepo, database, "Lit/Écrit", "SQL")
Rel(openaiService, openai, "Appelle", "HTTPS")

@enduml

