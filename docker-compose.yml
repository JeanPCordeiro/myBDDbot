version: '3.8'

services:
  # Backend Express
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bdd-bot-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      HOST: 0.0.0.0
      
      # Base de données SQLite
      DB_DIALECT: sqlite
      DB_STORAGE: /app/data/bdd_bot.sqlite
      
      # OpenAI (à configurer via l'interface)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_ORG_ID: ${OPENAI_ORG_ID:-}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4-turbo}
      OPENAI_FALLBACK_MODEL: ${OPENAI_FALLBACK_MODEL:-gpt-3.5-turbo}
      OPENAI_MAX_TOKENS: ${OPENAI_MAX_TOKENS:-2000}
      OPENAI_TEMPERATURE: ${OPENAI_TEMPERATURE:-0.7}
      OPENAI_TIMEOUT: ${OPENAI_TIMEOUT:-30000}
      
      # JWT
      JWT_SECRET: ${JWT_SECRET:-change-this-secret-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      
      # CORS
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:8080}
      
      # Limites
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      SESSION_MAX_PARTICIPANTS: ${SESSION_MAX_PARTICIPANTS:-10}
      SESSION_TIMEOUT_HOURS: ${SESSION_TIMEOUT_HOURS:-24}
      
      # Logs
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "3001:3001"
    networks:
      - bdd-bot-network
    volumes:
      - sqlite_data:/app/data
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bdd-bot-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3001}
      VITE_WS_URL: ${VITE_WS_URL:-ws://localhost:3001}
    ports:
      - "8080:8080"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - bdd-bot-network
    volumes:
      - frontend_logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 3

  # Reverse Proxy Nginx (optionnel pour production)
  nginx:
    image: nginx:alpine
    container_name: bdd-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - bdd-bot-network
    profiles:
      - production

volumes:
  sqlite_data:
    driver: local
  backend_logs:
    driver: local
  frontend_logs:
    driver: local

networks:
  bdd-bot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

